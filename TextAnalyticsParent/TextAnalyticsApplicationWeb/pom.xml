<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.verint.textanalytics.webapp</groupId>
    <artifactId>com.verint.textanalytics.parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>com.verint.textanalytics.web</artifactId>
  
  <packaging>war</packaging>
  <name>com.verint.textanalytics.web Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
<properties>
	<main.basedir>${project.parent.basedir}</main.basedir>
	<m2eclipse.wtp.contextRoot>TextAnalytics</m2eclipse.wtp.contextRoot>
	<com.github.searls.version>2.0-alpha-01</com.github.searls.version>
	<org.webjars.version>2.1.3</org.webjars.version>
	<jetty-version>9.3.11.v20160721</jetty-version>
</properties>
	
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>com.verint.textanalytics.webapp</groupId>
    	<artifactId>com.verint.textanalytics.model</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    </dependency>
    
    <!--  jersey -->
    <dependency>
    	<groupId>org.glassfish.jersey.core</groupId>
    	<artifactId>jersey-server</artifactId>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.jersey.containers</groupId>
    	<artifactId>jersey-container-servlet</artifactId>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.jersey.media</groupId>
    	<artifactId>jersey-media-multipart</artifactId>
    </dependency>
    <dependency>
    	<groupId>org.glassfish.jersey.media</groupId>
    	<artifactId>jersey-media-json-jackson</artifactId>
    </dependency>
	  <dependency>
		  <groupId>org.glassfish.jersey.ext</groupId>
		  <artifactId>jersey-spring3</artifactId>
	  </dependency>
    <!--  end jersey -->
    
    <dependency>
    	<groupId>com.verint.textanalytics.webapp</groupId>
    	<artifactId>com.verint.textanalytics.common</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    </dependency>

    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-web</artifactId>
    </dependency>
    
    <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-core</artifactId>
    </dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
	</dependency>
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache</artifactId>
	</dependency>

	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
	</dependency>
			
	<dependency>
		<groupId>com.verint.textanalytics.webapp</groupId>
		<artifactId>com.verint.textanalytics.bl</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</dependency>
		
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>		
	</dependency>

	<dependency>
		<groupId>joda-time</groupId>
		<artifactId>joda-time</artifactId>	
	</dependency>
	
	<dependency>
		<groupId>commons-beanutils</groupId>
		<artifactId>commons-beanutils</artifactId>		
	</dependency>
	
	<dependency>
		<groupId>commons-io</groupId>
		<artifactId>commons-io</artifactId>	
	</dependency>
			
	<dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>	
	</dependency>
	
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>				
	</dependency>
	
	<dependency>
		<groupId>org.apache.logging.log4j</groupId>
		<artifactId>log4j-slf4j-impl</artifactId>			
	</dependency>	
	
	<!--  powermock  -->
	<dependency>
		<groupId>org.powermock</groupId>
		<artifactId>powermock-api-mockito</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.powermock</groupId>
		<artifactId>powermock-module-junit4</artifactId>		
	</dependency>

	<dependency>
	  	<groupId>org.eclipse.jetty</groupId>
	  	<artifactId>jetty-servlets</artifactId>
	  	<version>${jetty-version}</version>
	</dependency>

  </dependencies>

	<profiles>
		<profile>
			<id>sencha_cmd</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>sencha-cmd</id>
								<phase>process-resources</phase>
								<configuration>
									<executable>${main.basedir}\Tools\SenchaCMDCompileExecuterOutput\SenchaCMDCompileExec.exe</executable>
									<workingDirectory>${env.TEMP}</workingDirectory>
									<arguments>
										<argument>compile
											-classpath=${project.basedir}\..\..\Resources\Javascript\extjs_4_2_2,${project.basedir}\..\..\Resources\Javascript\AppShell,${project.basedir}\src\main\webapp\js\AppCommon,${project.basedir}\src\main\webapp\js\AppText,${project.basedir}\src\main\webapp\js\FoundationIntegrationText
											exclude -all and include -namespace TextAnalyticsCommon and include
											-namespace TextAnalytics and include -namespace Text and
											exclude -namespace AppShell and -debug=true concat
											-output-file=${project.basedir}\src\main\webapp\js\artifacts\debug\Text.js</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						<execution>
								<id>sencha-cmd-release</id>
								<phase>process-resources</phase>
								<configuration>
									<executable>${main.basedir}\Tools\SenchaCMDCompileExecuterOutput\SenchaCMDCompileExec.exe</executable>
									<workingDirectory>${env.TEMP}</workingDirectory>
									<arguments>
										<argument>compile
											-classpath=${project.basedir}\..\..\Resources\Javascript\extjs_4_2_2,${project.basedir}\..\..\Resources\Javascript\AppShell,${project.basedir}\src\main\webapp\js\AppCommon,${project.basedir}\src\main\webapp\js\AppText,${project.basedir}\src\main\webapp\js\FoundationIntegrationText
											exclude -all and include -namespace TextAnalyticsCommon and include
											-namespace TextAnalytics and include -namespace Text and
											exclude -namespace AppShell and -debug=false concat -compress 
											-output-file=${project.basedir}\src\main\webapp\js\artifacts\release\Text.js</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>unittest_collector</id>
			<build>
				<plugins>
					<!-- Unit Tests Collector -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>unittest_collector</id>
								<phase>process-resources</phase>
								<configuration>
									<executable>collect.bat</executable>
									<workingDirectory>${main.basedir}\Tools\UnitTestCollector</workingDirectory>
									<arguments>
											<!-- Target path -->
											<argument>
												${main.basedir}\TextAnalyticsApplicationWeb\src\main\webapp
											</argument>
											<!-- target json -->
											<argument>
												testcases.json
											</argument>
											<!-- folder1 to parse -->
											<argument>
												js\AppCommon\unitTest
											</argument>
											<!-- folder2 to parse -->
											<argument>
												js\AppText\unitTest
											</argument>
									</arguments>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jasmine_unit_test</id>
			<build>
				<plugins>
				    
					<!-- Standard Jasmine Template -->
					<plugin>
				        <groupId>com.github.searls</groupId>
				        <artifactId>jasmine-maven-plugin</artifactId>
				        <version>${com.github.searls.version}</version>
						<dependencies>
						    <dependency>
						      	<groupId>org.webjars</groupId>
								<artifactId>jasmine</artifactId>
								<version>${org.webjars.version}</version>
						    </dependency>
						</dependencies>
								        
				        <configuration>
						    <webDriverCapabilities>
						      <capability>
						        <name>browserName</name>
						        <value>htmlunit</value>
						      </capability>
						    </webDriverCapabilities>				        	
				        	<jsTestSrcDir>${project.basedir}\src\main\webapp\js</jsTestSrcDir>
				        	<customRunnerConfiguration>${project.basedir}\src\test\resources\jsUnitTestDependencies\JasmineConfig\myCustomConfig.txt</customRunnerConfiguration>
				        	<customRunnerTemplate>${project.basedir}\src\test\resources\jsUnitTestDependencies\JasmineConfig\SpecRunner.htmltemplate</customRunnerTemplate>
				        	<specIncludes>
				        		<include>AppCommon/unitTest/**/*.js</include>
				        		<include>AppText/unitTest/**/*.js</include>
				        	</specIncludes>
				        </configuration>
		
				        <executions>
				          <execution>
				            <goals>
				              <goal>test</goal>
				            </goals>
				          </execution>
				        </executions>
			      </plugin>
			    </plugins>		
			</build>
			
		</profile>
		<profile>
			<id>generate_documentation</id>
			<build>
				<plugins>
					<!-- Unit Tests Collector -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate_documentation</id>
								<phase>process-resources</phase>
								<configuration>
									<executable>generate_doc.bat</executable>
									<workingDirectory>${main.basedir}\TextAnalyticsApplicationWeb\src\main\webapp</workingDirectory>
								</configuration>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
